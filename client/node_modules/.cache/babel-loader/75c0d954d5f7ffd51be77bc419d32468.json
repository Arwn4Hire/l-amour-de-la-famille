{"ast":null,"code":"export const read = async (userId, token) => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const remove = async (userId, token) => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const list = async () => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/users`, {\n      method: \"GET\"\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const update = async (userId, token, user) => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: user\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const updateUser = (user, next) => {\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"jwt\")) {\n      let auth = JSON.parse(localStorage.getItem(\"jwt\"));\n      auth.user = user;\n      localStorage.setItem(\"jwt\", JSON.stringify(auth));\n      next();\n    }\n  }\n};\nexport const follow = async (userId, token, followId) => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/user/follow`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        userId,\n        followId\n      })\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const unfollow = async (userId, token, unfollowId) => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/user/unfollow`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        userId,\n        unfollowId\n      })\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const findPeople = async (userId, token) => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/user/findpeople/${userId}`, {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};","map":{"version":3,"sources":["/home/rk32/Apps/ReactJs/insta_challenge/client/src/apis/apiUser.js"],"names":["read","userId","token","response","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","Authorization","json","err","console","log","remove","list","update","user","body","updateUser","next","window","localStorage","getItem","auth","JSON","parse","setItem","stringify","follow","followId","unfollow","unfollowId","findPeople"],"mappings":"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","sourcesContent":["export const read = async (userId, token) => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/user/${userId}`,\n        {\n          method: \"GET\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        }\n      );\n      return response.json();\n    } catch (err) {\n      return console.log(err);\n    }\n  };\n  \n  export const remove = async (userId, token) => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/user/${userId}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        }\n      );\n      return response.json();\n    } catch (err) {\n      return console.log(err);\n    }\n  };\n  \n  export const list = async () => {\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/users`, {\n        method: \"GET\"\n      });\n      return response.json();\n    } catch (err) {\n      return console.log(err);\n    }\n  };\n  \n  export const update = async (userId, token, user) => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/user/${userId}`,\n        {\n          method: \"PUT\",\n          headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: user\n        }\n      );\n      return response.json();\n    } catch (err) {\n      return console.log(err);\n    }\n  };\n  \n  export const updateUser = (user, next) => {\n    if (typeof window !== \"undefined\") {\n      if (localStorage.getItem(\"jwt\")) {\n        let auth = JSON.parse(localStorage.getItem(\"jwt\"));\n        auth.user = user;\n        localStorage.setItem(\"jwt\", JSON.stringify(auth));\n        next();\n      }\n    }\n  };\n  \n  export const follow = async (userId, token, followId) => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/user/follow`,\n        {\n          method: \"PUT\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({ userId, followId })\n        }\n      );\n      return response.json();\n    } catch (err) {\n      return console.log(err);\n    }\n  };\n  \n  export const unfollow = async (userId, token, unfollowId) => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/user/unfollow`,\n        {\n          method: \"PUT\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({ userId, unfollowId })\n        }\n      );\n      return response.json();\n    } catch (err) {\n      return console.log(err);\n    }\n  };\n  \n  export const findPeople = async (userId, token) => {\n    try {\n      const response = await fetch(\n        `${process.env.REACT_APP_API_URL}/user/findpeople/${userId}`,\n        {\n          method: \"GET\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          }\n        }\n      );\n      return response.json();\n    } catch (err) {\n      return console.log(err);\n    }\n  };\n  "]},"metadata":{},"sourceType":"module"}