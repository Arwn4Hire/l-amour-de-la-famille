{"ast":null,"code":"var _jsxFileName = \"/home/rk32/Apps/ReactJs/insta_challenge/client/src/components/profile/ProfileBody.js\";\nimport React, { Component } from 'react';\nimport { isAuthenticated } from '../../auth';\nimport { Redirect, Link } from \"react-router-dom\";\nimport { listByUser } from '../../apis/apiPost';\nimport { read } from '../../apis/apiUser';\nimport ProfileTabs from './ProfileTabs'; //import FollowProfileButton from \"./FollowProfileButton\";\n\nimport defaultProfile from '../../assets/images/useravatar.png';\nimport loadingSkeleton from '../../assets/images/skeleton-loading.gif';\nimport cog from \"../../assets/images/cog-solid.svg\";\nimport './profile.css';\nimport UserPostImgs from './UserPostImgs';\n\nclass ProfileBody extends Component {\n  constructor() {\n    super();\n\n    this.checkFollow = user => {\n      const jwt = isAuthenticated();\n      const match = user.followers.find(follower => {\n        return follower._id === jwt.user._id;\n      });\n      return match;\n    };\n\n    this.clickFollowButton = callApi => {\n      const userId = isAuthenticated().user._id;\n\n      const token = isAuthenticated().token;\n      callApi(userId, token, this.state.user._id).then(data => {\n        if (data.error) {\n          this.setState({\n            error: data.error\n          });\n        } else {\n          this.setState({\n            user: data,\n            following: !this.state.following\n          });\n        }\n      });\n    };\n\n    this.init = userId => {\n      this.setState({\n        loading: true\n      });\n      const token = isAuthenticated().token;\n      read(userId, token).then(data => {\n        if (data.error) {\n          this.setState({\n            redirectToSignIn: true\n          });\n        } else {\n          let following = this.checkFollow(data);\n          this.setState({\n            user: data,\n            following,\n            loading: false\n          });\n          this.loadPosts(data._id);\n        }\n      });\n    };\n\n    this.loadPosts = userId => {\n      const token = isAuthenticated().token;\n      listByUser(userId, token).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          console.log(data);\n          this.setState({\n            posts: data\n          });\n        }\n      });\n    };\n\n    this.state = {\n      user: {\n        following: [],\n        followers: []\n      },\n      redirectToSignIn: false,\n      following: false,\n      error: \"\",\n      posts: [],\n      loading: false,\n      likes: 0\n    };\n  }\n\n  componentDidMount() {\n    const userId = this.props.match.params.userId;\n    this.init(userId);\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    const userId = props.match.params.userId;\n    this.init(userId);\n  }\n\n  render() {\n    const {\n      redirectToSignIn,\n      user,\n      posts,\n      loading\n    } = this.state;\n    if (redirectToSignIn) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 34\n      }\n    });\n    const photoUrl = user._id ? `${process.env.REACT_APP_API_URL}/user/photo/${user._id}?${new Date().getTime()}` : defaultProfile;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, loading ? /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-fluid\",\n      width: \"auto\",\n      src: loadingSkeleton,\n      alt: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: photoUrl,\n      onError: i => i.target.src = `${defaultProfile}`,\n      alt: user.name,\n      height: \"150\",\n      width: \"150\",\n      style: {\n        borderRadius: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    })), isAuthenticated().user && isAuthenticated().user._id === user._id ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-user-settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"profile-user-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, user.name, \"_\"), /*#__PURE__*/React.createElement(Link, {\n      className: \"link-pf\",\n      to: `/user/edit/${user._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"profile-edit-btn btn-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 69\n      }\n    }, \"Edit Profile\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn profile-settings-btn\",\n      \"aria-label\": \"profile settings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: cog,\n      alt: \"setting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 88\n      }\n    }))) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"kl\") // <FollowProfileButton\n    //   following={this.state.following}\n    //   onButtonClick={this.clickFollowButton}\n    ///>\n    , \" \", /*#__PURE__*/React.createElement(ProfileTabs, {\n      followers: user.followers,\n      following: user.following,\n      posts: posts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"profile-bio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"profile-real-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, `Joined ${new Date(user.created).toDateString()}`, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 98\n      }\n    }), user.about))))), /*#__PURE__*/React.createElement(UserPostImgs, {\n      posts: posts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 4\n      }\n    })));\n  }\n\n}\n\nexport default ProfileBody;","map":{"version":3,"sources":["/home/rk32/Apps/ReactJs/insta_challenge/client/src/components/profile/ProfileBody.js"],"names":["React","Component","isAuthenticated","Redirect","Link","listByUser","read","ProfileTabs","defaultProfile","loadingSkeleton","UserPostImgs","ProfileBody","constructor","checkFollow","user","jwt","match","followers","find","follower","_id","clickFollowButton","callApi","userId","token","state","then","data","error","setState","following","init","loading","redirectToSignIn","loadPosts","console","log","posts","likes","componentDidMount","props","params","UNSAFE_componentWillReceiveProps","render","photoUrl","process","env","REACT_APP_API_URL","Date","getTime","i","target","src","name","borderRadius","cog","created","toDateString","about"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {isAuthenticated} from '../../auth'\nimport { Redirect, Link } from \"react-router-dom\";\nimport {listByUser} from '../../apis/apiPost'\nimport { read } from '../../apis/apiUser'\nimport ProfileTabs from './ProfileTabs'\n//import FollowProfileButton from \"./FollowProfileButton\";\nimport defaultProfile from '../../assets/images/useravatar.png'\nimport loadingSkeleton from '../../assets/images/skeleton-loading.gif'\nimport cog from '../../assets/images/cog-solid.svg'\nimport './profile.css'\nimport UserPostImgs from './UserPostImgs';\n\n\nclass ProfileBody extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: { following: [], followers: [] },\n      redirectToSignIn: false,\n      following: false,\n      error: \"\",\n      posts: [],\n      loading: false,\n      likes:0\n    };\n  }\n\n  checkFollow = user => {\n    const jwt = isAuthenticated();\n    const match = user.followers.find(follower => {\n      return follower._id === jwt.user._id;\n    });\n    return match;\n  };\n\n  clickFollowButton = callApi => {\n    const userId = isAuthenticated().user._id;\n    const token = isAuthenticated().token;\n\n    callApi(userId, token, this.state.user._id).then(data => {\n      if (data.error) {\n        this.setState({ error: data.error });\n      } else {\n        this.setState({ user: data, following: !this.state.following });\n      }\n    });\n  };\n\n  init = userId => {\n    this.setState({loading: true})\n    const token = isAuthenticated().token;\n    read(userId, token).then(data => {\n      if (data.error) {\n        this.setState({ redirectToSignIn: true });\n      } else {\n        let following = this.checkFollow(data);\n        this.setState({ user: data, following, loading: false });\n        this.loadPosts(data._id);\n      }\n    });\n  };\n\n  loadPosts = userId => {\n    const token = isAuthenticated().token;\n    listByUser(userId, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        console.log(data)\n        this.setState({ posts: data });\n      }\n    });\n  };\n\n  componentDidMount() {\n    const userId = this.props.match.params.userId;    \n    this.init(userId);\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    const userId = props.match.params.userId;\n    this.init(userId);\n  }\n\n  render() {\n    const { redirectToSignIn, user, posts, loading } = this.state;\n    if (redirectToSignIn) return <Redirect to=\"/sign-in\" />;\n\n    const photoUrl = user._id\n      ? `${process.env.REACT_APP_API_URL}/user/photo/${\n          user._id\n        }?${new Date().getTime()}`\n      : defaultProfile;\n    return (\n      <div className='container'>\n      {loading ? (\n        <img className='img-fluid' width='auto'  src={loadingSkeleton} alt='loading'/>\n    ) : (\n      <>\n      <header>\n\n      <div className=\"container\">\n    \n        <div className=\"profile\">\n    \n          <div className=\"profile-image\">\n    \n            <img src={photoUrl}\n            onError={i => (i.target.src = `${defaultProfile}`)}\n            alt={user.name}\n            height=\"150\"\n            width=\"150\"\n            style={{ borderRadius: \"50%\" }}/>\n    \n          </div>\n          {isAuthenticated().user &&\n            isAuthenticated().user._id === user._id ? (\n          <div className=\"profile-user-settings\">\n    \n            <h1 className=\"profile-user-name\">{user.name}_</h1>\n            \n            <Link className='link-pf' to={`/user/edit/${user._id}`}><button className=\"profile-edit-btn btn-info\">Edit Profile</button></Link>\n    \n            <button className=\"btn profile-settings-btn\" aria-label=\"profile settings\"><img  src={cog} alt='setting'/></button>\n            \n          </div>\n          ) : (\n            <p>kl</p>\n            // <FollowProfileButton\n            //   following={this.state.following}\n            //   onButtonClick={this.clickFollowButton}\n            ///>\n          )}{\" \"}\n    \n          <ProfileTabs\n          followers={user.followers}\n          following={user.following}\n          posts={posts}\n        />\n    \n          <div className=\"profile-bio\">\n    \n            <p className=\"profile-real-name\">{`Joined ${new Date(user.created).toDateString()}`} <br/>{user.about}</p>\n    \n          </div>\n\n        </div>\n        \n    \n      </div>\n      \n   \n    \n    </header>\n    \n   <UserPostImgs posts={posts}/>\n    </>\n      )}\n    </div>\n    \n    \n    );\n  }\n}\n\nexport default ProfileBody;\n"]},"metadata":{},"sourceType":"module"}