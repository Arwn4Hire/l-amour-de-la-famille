{"ast":null,"code":"var _jsxFileName = \"/home/rk32/Apps/ReactJs/insta_challenge/client/src/templates/Item.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Animated, Easing, findNodeHandle, PanResponder, UIManager, StyleSheet, View } from 'react-native';\nimport DisableBodyScrollingView from './DisableScrolling';\nimport ItemFooter from './ItemFooter';\nimport ItemHeader from './ItemHeader';\nimport ItemImage from './ItemImage';\nexport function pow2abs(a, b) {\n  return Math.pow(Math.abs(a - b), 2);\n}\nexport function getDistance(touches) {\n  const [a, b] = touches;\n\n  if (a == null || b == null) {\n    return 0;\n  }\n\n  return Math.sqrt(pow2abs(a.pageX, b.pageX) + pow2abs(a.pageY, b.pageY));\n}\nexport function getPosition(touches) {\n  const [a, b] = touches;\n\n  if (a == null || b == null) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    x: a.pageX,\n    y: a.pageY\n  };\n}\nexport function getDeltaTranslation(position, initial) {\n  return {\n    x: position.x - initial.x,\n    y: position.y - initial.y\n  };\n}\nconst SCALE_MULTIPLIER = 1;\nexport function getScale(currentDistance, initialDistance) {\n  return currentDistance / initialDistance * SCALE_MULTIPLIER;\n}\nexport function measureNode(node, parent) {\n  return new Promise((resolve, reject) => {\n    UIManager.measureLayout(node, parent || node && node.parentNode, e => reject(e), (x, y, w, h, l, t) => {\n      resolve({\n        x,\n        y,\n        w,\n        h\n      });\n    });\n  });\n}\nconst RESTORE_ANIMATION_DURATION = 200;\n\nclass Item extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(1);\n    this._initialTouches = [];\n\n    this._generatePanHandlers = () => {\n      this._gestureHandler = PanResponder.create({\n        onStartShouldSetResponderCapture: () => true,\n        onStartShouldSetPanResponderCapture: ({\n          nativeEvent\n        }) => {\n          return nativeEvent.touches.length === 2;\n        },\n        onMoveShouldSetResponderCapture: () => true,\n        onMoveShouldSetPanResponderCapture: ({\n          nativeEvent\n        }) => {\n          return nativeEvent.touches.length === 2;\n        },\n        onPanResponderGrant: this._startGesture,\n        onPanResponderMove: this._onGestureMove,\n        onPanResponderRelease: this._onGestureRelease,\n        onPanResponderTerminationRequest: () => {\n          return this._gestureInProgress == null;\n        },\n        onPanResponderTerminate: (event, gestureState) => {\n          return this._onGestureRelease(event, gestureState);\n        }\n      });\n    };\n\n    this._startGesture = async (event, gestureState) => {\n      // Sometimes gesture start happens two or more times rapidly.\n      if (this._gestureInProgress) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n      this._gestureInProgress = gestureState.stateID;\n      let {\n        item,\n        onGestureStart\n      } = this.props;\n      let {\n        gesturePosition,\n        getScrollPosition\n      } = this.context;\n      let {\n        touches\n      } = event.nativeEvent;\n      this._initialTouches = touches;\n      let selectedPhotoMeasurement = await this._measureSelectedPhoto();\n      this._selectedPhotoMeasurement = selectedPhotoMeasurement;\n      onGestureStart({\n        source: item.source,\n        measurement: selectedPhotoMeasurement\n      });\n      gesturePosition.setValue({\n        x: 0,\n        y: 0\n      });\n      gesturePosition.setOffset({\n        x: 0,\n        y: selectedPhotoMeasurement.y // - getScrollPosition(),\n\n      });\n      Animated.timing(this._opacity, {\n        toValue: 0,\n        duration: 200\n      }).start();\n    };\n\n    this._onGestureMove = (event, gestureState) => {\n      let {\n        touches\n      } = event.nativeEvent;\n\n      if (!this._gestureInProgress) {\n        return;\n      }\n\n      if (touches.length < 2) {\n        // Trigger a realease\n        this._onGestureRelease(event, gestureState);\n\n        return;\n      } // for moving photo around\n\n\n      let {\n        gesturePosition,\n        scaleValue\n      } = this.context;\n      let {\n        dx,\n        dy\n      } = gestureState;\n      let currentPosition = getPosition(touches);\n      let initialPosition = getPosition(this._initialTouches);\n      const {\n        x,\n        y\n      } = getDeltaTranslation(currentPosition, initialPosition);\n      gesturePosition.x.setValue(x);\n      gesturePosition.y.setValue(y); // for scaling photo\n\n      let currentDistance = getDistance(touches);\n      let initialDistance = getDistance(this._initialTouches);\n      let newScale = getScale(currentDistance, initialDistance);\n      scaleValue.setValue(Math.max(newScale, 1));\n    };\n\n    this._onGestureRelease = (event, gestureState) => {\n      if (this._gestureInProgress !== gestureState.stateID) {\n        return;\n      } // https://medium.com/@audytanudjaja/react-native-ui-challenge-building-instagram-zoom-draggable-photo-9127413b1d29\n\n\n      this._gestureInProgress = null;\n      this._initialTouches = [];\n      let {\n        onGestureRelease\n      } = this.props;\n      let {\n        gesturePosition,\n        scaleValue,\n        getScrollPosition\n      } = this.context;\n      Animated.parallel([Animated.timing(gesturePosition.x, {\n        toValue: 0,\n        duration: RESTORE_ANIMATION_DURATION,\n        easing: Easing.linear\n      }), Animated.timing(gesturePosition.y, {\n        toValue: 0,\n        duration: RESTORE_ANIMATION_DURATION,\n        easing: Easing.linear\n      }), Animated.timing(scaleValue, {\n        toValue: 1,\n        duration: RESTORE_ANIMATION_DURATION,\n        easing: Easing.linear\n      })]).start(() => {\n        gesturePosition.setOffset({\n          x: 0,\n          y: this._selectedPhotoMeasurement && this._selectedPhotoMeasurement.y || 0 - getScrollPosition()\n        });\n\n        this._opacity.setValue(1);\n\n        requestAnimationFrame(() => {\n          onGestureRelease();\n        });\n      });\n    };\n\n    this._measureSelectedPhoto = async () => {\n      let parent = findNodeHandle(this._parent);\n      let photoComponent = findNodeHandle(this._photoComponent);\n\n      try {\n        const photoMeasurement = await measureNode(photoComponent, parent);\n        const bodyRect = document.body.getBoundingClientRect();\n        const elemRect = photoComponent.getBoundingClientRect();\n        const offset = elemRect.top + window.scrollY;\n        return {\n          x: photoMeasurement.x,\n          y: offset,\n          w: photoMeasurement.w,\n          h: photoMeasurement.h\n        };\n      } catch (error) {\n        console.log('ERROR', error);\n      }\n\n      return {};\n    };\n\n    this._generatePanHandlers();\n  }\n\n  render() {\n    const {\n      imageWidth,\n      imageHeight,\n      item,\n      isLarge\n    } = this.props;\n    return /*#__PURE__*/React.createElement(View, {\n      style: [{\n        backgroundColor: 'white'\n      }, isLarge && {\n        borderColor: '#e6e6e6',\n        borderRadius: 3,\n        borderWidth: StyleSheet.hairlineWidth,\n        marginBottom: 15\n      }],\n      ref: parentNode => this._parent = parentNode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ItemHeader, {\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(DisableBodyScrollingView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Animated.View, Object.assign({}, this._gestureHandler.panHandlers, {\n      testID: \"webkit-disable-touches\",\n      style: {\n        opacity: this._opacity\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ItemImage, {\n      ref: node => this._photoComponent = node,\n      imageWidth: imageWidth,\n      imageHeight: imageHeight,\n      source: item.source,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(ItemFooter, {\n      item: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nItem.contextTypes = {\n  gesturePosition: PropTypes.object,\n  scaleValue: PropTypes.object,\n  getScrollPosition: PropTypes.func\n};\nexport default Item;","map":{"version":3,"sources":["/home/rk32/Apps/ReactJs/insta_challenge/client/src/templates/Item.js"],"names":["PropTypes","React","Animated","Easing","findNodeHandle","PanResponder","UIManager","StyleSheet","View","DisableBodyScrollingView","ItemFooter","ItemHeader","ItemImage","pow2abs","a","b","Math","pow","abs","getDistance","touches","sqrt","pageX","pageY","getPosition","x","y","getDeltaTranslation","position","initial","SCALE_MULTIPLIER","getScale","currentDistance","initialDistance","measureNode","node","parent","Promise","resolve","reject","measureLayout","parentNode","e","w","h","l","t","RESTORE_ANIMATION_DURATION","Item","PureComponent","constructor","props","_opacity","Value","_initialTouches","_generatePanHandlers","_gestureHandler","create","onStartShouldSetResponderCapture","onStartShouldSetPanResponderCapture","nativeEvent","length","onMoveShouldSetResponderCapture","onMoveShouldSetPanResponderCapture","onPanResponderGrant","_startGesture","onPanResponderMove","_onGestureMove","onPanResponderRelease","_onGestureRelease","onPanResponderTerminationRequest","_gestureInProgress","onPanResponderTerminate","event","gestureState","preventDefault","stopPropagation","stateID","item","onGestureStart","gesturePosition","getScrollPosition","context","selectedPhotoMeasurement","_measureSelectedPhoto","_selectedPhotoMeasurement","source","measurement","setValue","setOffset","timing","toValue","duration","start","scaleValue","dx","dy","currentPosition","initialPosition","newScale","max","onGestureRelease","parallel","easing","linear","requestAnimationFrame","_parent","photoComponent","_photoComponent","photoMeasurement","bodyRect","document","body","getBoundingClientRect","elemRect","offset","top","window","scrollY","error","console","log","render","imageWidth","imageHeight","isLarge","backgroundColor","borderColor","borderRadius","borderWidth","hairlineWidth","marginBottom","panHandlers","opacity","contextTypes","object","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Animated,\n  Easing,\n  findNodeHandle,\n  PanResponder,\n  UIManager,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport DisableBodyScrollingView from './DisableScrolling';\nimport ItemFooter from './ItemFooter';\nimport ItemHeader from './ItemHeader';\nimport ItemImage from './ItemImage';\n\nexport function pow2abs(a, b) {\n  return Math.pow(Math.abs(a - b), 2);\n}\n\nexport function getDistance(touches) {\n  const [a, b] = touches;\n  if (a == null || b == null) {\n    return 0;\n  }\n  return Math.sqrt(pow2abs(a.pageX, b.pageX) + pow2abs(a.pageY, b.pageY));\n}\n\nexport function getPosition(touches) {\n  const [a, b] = touches;\n  if (a == null || b == null) {\n    return { x: 0, y: 0 };\n  }\n  return { x: a.pageX, y: a.pageY };\n}\n\nexport function getDeltaTranslation(position, initial) {\n  return { x: position.x - initial.x, y: position.y - initial.y };\n}\n\nconst SCALE_MULTIPLIER = 1;\n\nexport function getScale(currentDistance, initialDistance) {\n  return (currentDistance / initialDistance) * SCALE_MULTIPLIER;\n}\n\nexport function measureNode(node, parent) {\n  return new Promise((resolve, reject) => {\n    UIManager.measureLayout(\n      node,\n      parent || (node && node.parentNode),\n      e => reject(e),\n      (x, y, w, h, l, t) => {\n        resolve({ x, y, w, h });\n      },\n    );\n  });\n}\nconst RESTORE_ANIMATION_DURATION = 200;\nclass Item extends React.PureComponent {\n  _opacity = new Animated.Value(1);\n  _initialTouches = [];\n\n  static contextTypes = {\n    gesturePosition: PropTypes.object,\n    scaleValue: PropTypes.object,\n    getScrollPosition: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this._generatePanHandlers();\n  }\n\n  _generatePanHandlers = () => {\n    this._gestureHandler = PanResponder.create({\n      onStartShouldSetResponderCapture: () => true,\n      onStartShouldSetPanResponderCapture: ({ nativeEvent }) => {\n        return nativeEvent.touches.length === 2;\n      },\n      onMoveShouldSetResponderCapture: () => true,\n      onMoveShouldSetPanResponderCapture: ({ nativeEvent }) => {\n        return nativeEvent.touches.length === 2;\n      },\n      onPanResponderGrant: this._startGesture,\n      onPanResponderMove: this._onGestureMove,\n      onPanResponderRelease: this._onGestureRelease,\n      onPanResponderTerminationRequest: () => {\n        return this._gestureInProgress == null;\n      },\n      onPanResponderTerminate: (event, gestureState) => {\n        return this._onGestureRelease(event, gestureState);\n      },\n    });\n  };\n\n  _startGesture = async (event, gestureState) => {\n    // Sometimes gesture start happens two or more times rapidly.\n    if (this._gestureInProgress) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n    this._gestureInProgress = gestureState.stateID;\n    let { item, onGestureStart } = this.props;\n    let { gesturePosition, getScrollPosition } = this.context;\n    let { touches } = event.nativeEvent;\n\n    this._initialTouches = touches;\n\n    let selectedPhotoMeasurement = await this._measureSelectedPhoto();\n    this._selectedPhotoMeasurement = selectedPhotoMeasurement;\n    onGestureStart({\n      source: item.source,\n      measurement: selectedPhotoMeasurement,\n    });\n\n    gesturePosition.setValue({\n      x: 0,\n      y: 0,\n    });\n\n    gesturePosition.setOffset({\n      x: 0,\n      y: selectedPhotoMeasurement.y, // - getScrollPosition(),\n    });\n\n    Animated.timing(this._opacity, {\n      toValue: 0,\n      duration: 200,\n    }).start();\n  };\n\n  _onGestureMove = (event, gestureState) => {\n    let { touches } = event.nativeEvent;\n    if (!this._gestureInProgress) {\n      return;\n    }\n\n    if (touches.length < 2) {\n      // Trigger a realease\n      this._onGestureRelease(event, gestureState);\n      return;\n    }\n\n    // for moving photo around\n    let { gesturePosition, scaleValue } = this.context;\n    let { dx, dy } = gestureState;\n    let currentPosition = getPosition(touches);\n    let initialPosition = getPosition(this._initialTouches);\n\n    const { x, y } = getDeltaTranslation(currentPosition, initialPosition);\n    gesturePosition.x.setValue(x);\n    gesturePosition.y.setValue(y);\n\n    // for scaling photo\n    let currentDistance = getDistance(touches);\n    let initialDistance = getDistance(this._initialTouches);\n    let newScale = getScale(currentDistance, initialDistance);\n    scaleValue.setValue(Math.max(newScale, 1));\n  };\n\n  _onGestureRelease = (event, gestureState) => {\n    if (this._gestureInProgress !== gestureState.stateID) {\n      return;\n    }\n\n    // https://medium.com/@audytanudjaja/react-native-ui-challenge-building-instagram-zoom-draggable-photo-9127413b1d29\n    this._gestureInProgress = null;\n    this._initialTouches = [];\n    let { onGestureRelease } = this.props;\n    let { gesturePosition, scaleValue, getScrollPosition } = this.context;\n\n    Animated.parallel([\n      Animated.timing(gesturePosition.x, {\n        toValue: 0,\n        duration: RESTORE_ANIMATION_DURATION,\n        easing: Easing.linear,\n      }),\n      Animated.timing(gesturePosition.y, {\n        toValue: 0,\n        duration: RESTORE_ANIMATION_DURATION,\n        easing: Easing.linear,\n      }),\n      Animated.timing(scaleValue, {\n        toValue: 1,\n        duration: RESTORE_ANIMATION_DURATION,\n        easing: Easing.linear,\n      }),\n    ]).start(() => {\n      gesturePosition.setOffset({\n        x: 0,\n        y:\n          (this._selectedPhotoMeasurement &&\n            this._selectedPhotoMeasurement.y) ||\n          0 - getScrollPosition(),\n      });\n\n      this._opacity.setValue(1);\n\n      requestAnimationFrame(() => {\n        onGestureRelease();\n      });\n    });\n  };\n\n  _measureSelectedPhoto = async () => {\n    let parent = findNodeHandle(this._parent);\n    let photoComponent = findNodeHandle(this._photoComponent);\n\n    try {\n      const photoMeasurement = await measureNode(photoComponent, parent);\n      const bodyRect = document.body.getBoundingClientRect();\n      const elemRect = photoComponent.getBoundingClientRect();\n      const offset = elemRect.top + window.scrollY;\n\n      return {\n        x: photoMeasurement.x,\n        y: offset,\n        w: photoMeasurement.w,\n        h: photoMeasurement.h,\n      };\n    } catch (error) {\n      console.log('ERROR', error);\n    }\n    return {};\n  };\n\n  render() {\n    const { imageWidth, imageHeight, item, isLarge } = this.props;\n\n    return (\n      <View\n        style={[\n          { backgroundColor: 'white' },\n          isLarge && {\n            borderColor: '#e6e6e6',\n            borderRadius: 3,\n            borderWidth: StyleSheet.hairlineWidth,\n            marginBottom: 15,\n          },\n        ]}\n        ref={parentNode => (this._parent = parentNode)}\n      >\n        <ItemHeader item={item} />\n        <DisableBodyScrollingView>\n          <Animated.View\n            {...this._gestureHandler.panHandlers}\n            testID=\"webkit-disable-touches\"\n            style={{\n              opacity: this._opacity,\n            }}\n          >\n            <ItemImage\n              ref={node => (this._photoComponent = node)}\n              imageWidth={imageWidth}\n              imageHeight={imageHeight}\n              source={item.source}\n            />\n          </Animated.View>\n        </DisableBodyScrollingView>\n\n        <ItemFooter item={item} />\n      </View>\n    );\n  }\n}\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}