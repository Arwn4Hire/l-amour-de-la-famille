{"ast":null,"code":"var _jsxFileName = \"/home/rk32/Apps/ReactJs/insta_challenge/client/src/templates/StorySlider.js\";\nimport { Ionicons } from '@expo/vector-icons';\nimport React from 'react';\nimport { ScrollView, StyleSheet, Text, TouchableOpacity, View, findNodeHandle } from 'react-native';\nimport dispatch from '../rematch/dispatch';\nimport ProfileImage from './ProfileImage';\nimport useLayout from '../useLayout';\nconst imagePadding = 2;\nconst imageBorderWidth = 2;\n\nclass OutlineImage extends React.Component {\n  render() {\n    const {\n      style,\n      source,\n      renderImage,\n      account,\n      imageSize,\n      ...props\n    } = this.props;\n    const imageWrapperSize = imageSize + (imagePadding + imageBorderWidth) * 2;\n    let imageComponent;\n\n    if (renderImage) {\n      imageComponent = renderImage({\n        imageWrapperSize\n      });\n    } else {\n      imageComponent = /*#__PURE__*/React.createElement(ProfileImage, Object.assign({\n        style: [{\n          height: imageSize,\n          width: imageSize,\n          borderRadius: imageSize / 2,\n          overflow: 'hidden',\n          resizeMode: 'cover',\n          backgroundColor: 'lightgray'\n        }, style],\n        account: account,\n        source: source\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(View, {\n      style: {\n        aspectRatio: 1,\n        height: imageWrapperSize,\n        width: imageWrapperSize,\n        padding: imagePadding,\n        borderRadius: imageWrapperSize / 2,\n        borderWidth: imageBorderWidth,\n        borderColor: '#CA4074'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, imageComponent, /*#__PURE__*/React.createElement(View, {\n      style: [{\n        position: 'absolute',\n        top: imagePadding,\n        right: imagePadding,\n        left: imagePadding,\n        bottom: imagePadding,\n        borderRadius: imageWrapperSize / 2,\n        borderWidth: StyleSheet.hairlineWidth,\n        borderColor: 'rgba(0,0,0,0.0975)'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst ICON_SIZE = 56;\n\nclass StoryItem extends React.Component {\n  render() {\n    const {\n      title,\n      items,\n      account,\n      index,\n      renderImage\n    } = this.props;\n    let source = undefined;\n\n    if (!account && Array.isArray(items)) {\n      source = {\n        uri: items[0].uri\n      };\n    }\n\n    return /*#__PURE__*/React.createElement(TouchableOpacity, {\n      ref: ref => this.item = ref,\n      onPress: () => {\n        this.item.measure((ox, oy, width, height, px, py) => {\n          let photoComponent = findNodeHandle(this.item);\n          const elemRect = photoComponent.getBoundingClientRect();\n          const topOffset = elemRect.top + window.scrollY;\n          const leftOffset = elemRect.left + window.scrollX;\n          const offset = {\n            top: topOffset + ICON_SIZE / 2,\n            left: leftOffset + ICON_SIZE / 2\n          };\n          dispatch().stories.openCarousel({\n            index,\n            offset\n          });\n        });\n      },\n      style: {\n        alignItems: 'center',\n        marginRight: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(OutlineImage, {\n      source: source,\n      account: account,\n      renderImage: renderImage,\n      imageSize: ICON_SIZE,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      style: {\n        fontSize: 12,\n        marginTop: 6\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, title));\n  }\n\n}\n\nconst NewStory = () => {\n  return /*#__PURE__*/React.createElement(StoryItem, {\n    title: \"new\",\n    renderImage: () => /*#__PURE__*/React.createElement(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        marginTop: 4,\n        alignItems: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Ionicons, {\n      name: \"ios-add\",\n      size: 48,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  });\n};\n\nfunction Stories({\n  stories,\n  hasNew\n}) {\n  const {\n    onLayout,\n    width\n  } = useLayout();\n  const isLarge = width >= 600;\n  return /*#__PURE__*/React.createElement(ScrollView, {\n    horizontal: true,\n    onLayout: onLayout,\n    showsHorizontalScrollIndicator: false,\n    style: [styles.row, isLarge && {\n      marginVertical: 24,\n      borderColor: '#e6e6e6',\n      borderRadius: 3,\n      backgroundColor: '#FAFAFA',\n      borderWidth: StyleSheet.hairlineWidth\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, hasNew && /*#__PURE__*/React.createElement(NewStory, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 18\n    }\n  }), stories.map((story, index) => /*#__PURE__*/React.createElement(StoryItem, Object.assign({\n    key: story.account\n  }, story, {\n    index: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default Stories;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 15,\n    backgroundColor: 'transparent'\n  },\n  row: {\n    backgroundColor: 'white',\n    flexDirection: 'row',\n    paddingVertical: 10,\n    paddingHorizontal: 12\n  }\n});","map":{"version":3,"sources":["/home/rk32/Apps/ReactJs/insta_challenge/client/src/templates/StorySlider.js"],"names":["Ionicons","React","ScrollView","StyleSheet","Text","TouchableOpacity","View","findNodeHandle","dispatch","ProfileImage","useLayout","imagePadding","imageBorderWidth","OutlineImage","Component","render","style","source","renderImage","account","imageSize","props","imageWrapperSize","imageComponent","height","width","borderRadius","overflow","resizeMode","backgroundColor","aspectRatio","padding","borderWidth","borderColor","position","top","right","left","bottom","hairlineWidth","ICON_SIZE","StoryItem","title","items","index","undefined","Array","isArray","uri","ref","item","measure","ox","oy","px","py","photoComponent","elemRect","getBoundingClientRect","topOffset","window","scrollY","leftOffset","scrollX","offset","stories","openCarousel","alignItems","marginRight","fontSize","marginTop","NewStory","flex","justifyContent","Stories","hasNew","onLayout","isLarge","styles","row","marginVertical","map","story","create","container","paddingTop","flexDirection","paddingVertical","paddingHorizontal"],"mappings":"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","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\nimport React from 'react';\nimport {\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  findNodeHandle,\n} from 'react-native';\n\nimport dispatch from '../rematch/dispatch';\nimport ProfileImage from './ProfileImage';\nimport useLayout from '../useLayout';\n\nconst imagePadding = 2;\nconst imageBorderWidth = 2;\n\nclass OutlineImage extends React.Component {\n  render() {\n    const {\n      style,\n      source,\n      renderImage,\n      account,\n      imageSize,\n      ...props\n    } = this.props;\n\n    const imageWrapperSize = imageSize + (imagePadding + imageBorderWidth) * 2;\n\n    let imageComponent;\n    if (renderImage) {\n      imageComponent = renderImage({ imageWrapperSize });\n    } else {\n      imageComponent = (\n        <ProfileImage\n          style={[\n            {\n              height: imageSize,\n              width: imageSize,\n              borderRadius: imageSize / 2,\n              overflow: 'hidden',\n              resizeMode: 'cover',\n              backgroundColor: 'lightgray',\n            },\n            style,\n          ]}\n          account={account}\n          source={source}\n          {...props}\n        />\n      );\n    }\n    return (\n      <View\n        style={{\n          aspectRatio: 1,\n          height: imageWrapperSize,\n          width: imageWrapperSize,\n          padding: imagePadding,\n          borderRadius: imageWrapperSize / 2,\n          borderWidth: imageBorderWidth,\n          borderColor: '#CA4074',\n        }}\n      >\n        {imageComponent}\n        <View\n          style={[\n            {\n              position: 'absolute',\n              top: imagePadding,\n              right: imagePadding,\n              left: imagePadding,\n              bottom: imagePadding,\n              borderRadius: imageWrapperSize / 2,\n              borderWidth: StyleSheet.hairlineWidth,\n              borderColor: 'rgba(0,0,0,0.0975)',\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n}\n\nconst ICON_SIZE = 56;\n\nclass StoryItem extends React.Component {\n  render() {\n    const { title, items, account, index, renderImage } = this.props;\n\n    let source = undefined;\n    if (!account && Array.isArray(items)) {\n      source = { uri: items[0].uri };\n    }\n\n    return (\n      <TouchableOpacity\n        ref={ref => (this.item = ref)}\n        onPress={() => {\n          this.item.measure((ox, oy, width, height, px, py) => {\n            let photoComponent = findNodeHandle(this.item);\n            const elemRect = photoComponent.getBoundingClientRect();\n            const topOffset = elemRect.top + window.scrollY;\n            const leftOffset = elemRect.left + window.scrollX;\n\n            const offset = {\n              top: topOffset + ICON_SIZE / 2,\n              left: leftOffset + ICON_SIZE / 2,\n            };\n\n            dispatch().stories.openCarousel({ index, offset });\n          });\n        }}\n        style={{ alignItems: 'center', marginRight: 12 }}\n      >\n        <OutlineImage\n          source={source}\n          account={account}\n          renderImage={renderImage}\n          imageSize={ICON_SIZE}\n        />\n        <Text style={{ fontSize: 12, marginTop: 6 }}>{title}</Text>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst NewStory = () => {\n  return (\n    <StoryItem\n      title=\"new\"\n      renderImage={() => (\n        <View\n          style={{\n            flex: 1,\n            justifyContent: 'center',\n            marginTop: 4,\n            alignItems: 'center',\n          }}\n        >\n          <Ionicons name=\"ios-add\" size={48} />\n        </View>\n      )}\n    />\n  );\n};\n\nfunction Stories({ stories, hasNew }) {\n  const { onLayout, width } = useLayout();\n\n  const isLarge = width >= 600;\n  return (\n    <ScrollView\n      horizontal\n      onLayout={onLayout}\n      showsHorizontalScrollIndicator={false}\n      style={[\n        styles.row,\n        isLarge && {\n          marginVertical: 24,\n          borderColor: '#e6e6e6',\n          borderRadius: 3,\n          backgroundColor: '#FAFAFA',\n\n          borderWidth: StyleSheet.hairlineWidth,\n        },\n      ]}\n    >\n      {hasNew && <NewStory />}\n      {stories.map((story, index) => (\n        <StoryItem key={story.account} {...story} index={index} />\n      ))}\n    </ScrollView>\n  );\n}\n\nexport default Stories;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 15,\n    backgroundColor: 'transparent',\n  },\n  row: {\n    backgroundColor: 'white',\n    flexDirection: 'row',\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}