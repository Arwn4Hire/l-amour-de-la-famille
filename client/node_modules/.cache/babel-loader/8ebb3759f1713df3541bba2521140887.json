{"ast":null,"code":"var _jsxFileName = \"/home/rk32/Apps/ReactJs/insta_challenge/client/src/templates/DisableScrolling.js\";\nimport React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { View } from 'react-native';\n\nconst getElement = component => {\n  try {\n    return findDOMNode(component);\n  } catch (e) {\n    return component;\n  }\n};\n\nclass DisableBodyScrollingView extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.start = {\n      x: 0,\n      y: 0\n    };\n\n    this.freezeBodyStart = e => {\n      this.start.x = e.touches[0].pageX;\n      this.start.y = e.touches[0].pageY;\n\n      if (this.props.shouldDisable(e, {\n        state: 'BEGAN',\n        dx: 0,\n        dy: 0\n      })) {\n        e.preventDefault();\n      }\n    };\n\n    this.freezeBodyMove = e => {\n      let delta = {\n        state: 'MOVED',\n        dx: this.start.x - e.touches[0].pageX,\n        dy: this.start.y - e.touches[0].pageY\n      };\n\n      if (this.props.shouldDisable(e, delta)) {\n        e.preventDefault();\n      }\n    };\n  }\n\n  componentWillUnmount() {\n    if (this.view) {\n      this.view.removeEventListener('touchstart', this.freezeBodyStart, false);\n      this.view.removeEventListener('touchmove', this.freezeBodyMove, false);\n    }\n  }\n\n  render() {\n    const {\n      style,\n      ...props\n    } = this.props;\n    return /*#__PURE__*/React.createElement(View, Object.assign({\n      style: [{\n        flex: 1\n      }, style],\n      tabIndex: \"0\",\n      ref: view => {\n        const nextView = getElement(view);\n\n        if (nextView && nextView.addEventListener) {\n          nextView.addEventListener('touchstart', this.freezeBodyStart, false);\n          nextView.addEventListener('touchmove', this.freezeBodyMove, false);\n        }\n\n        if (this.view && this.view.removeEventListener) {\n          this.view.removeEventListener('touchstart', this.freezeBodyStart, false);\n          this.view.removeEventListener('touchmove', this.freezeBodyMove, false);\n        }\n\n        this.view = nextView;\n      }\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nDisableBodyScrollingView.defaultProps = {\n  shouldDisable: e => {\n    return e.touches.length > 1;\n  }\n};\nexport default DisableBodyScrollingView;","map":{"version":3,"sources":["/home/rk32/Apps/ReactJs/insta_challenge/client/src/templates/DisableScrolling.js"],"names":["React","findDOMNode","View","getElement","component","e","DisableBodyScrollingView","Component","start","x","y","freezeBodyStart","touches","pageX","pageY","props","shouldDisable","state","dx","dy","preventDefault","freezeBodyMove","delta","componentWillUnmount","view","removeEventListener","render","style","flex","nextView","addEventListener","defaultProps","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { View } from 'react-native';\n\nconst getElement = component => {\n  try {\n    return findDOMNode(component);\n  } catch (e) {\n    return component;\n  }\n};\n\nclass DisableBodyScrollingView extends React.Component {\n  static defaultProps = {\n    shouldDisable: e => {\n      return e.touches.length > 1;\n    },\n  };\n  componentWillUnmount() {\n    if (this.view) {\n      this.view.removeEventListener('touchstart', this.freezeBodyStart, false);\n      this.view.removeEventListener('touchmove', this.freezeBodyMove, false);\n    }\n  }\n  start = { x: 0, y: 0 };\n  freezeBodyStart = e => {\n    this.start.x = e.touches[0].pageX;\n    this.start.y = e.touches[0].pageY;\n\n    if (this.props.shouldDisable(e, { state: 'BEGAN', dx: 0, dy: 0 })) {\n      e.preventDefault();\n    }\n  };\n\n  freezeBodyMove = e => {\n    let delta = {\n      state: 'MOVED',\n      dx: this.start.x - e.touches[0].pageX,\n      dy: this.start.y - e.touches[0].pageY,\n    };\n\n    if (this.props.shouldDisable(e, delta)) {\n      e.preventDefault();\n    }\n  };\n\n  render() {\n    const { style, ...props } = this.props;\n\n    return (\n      <View\n        style={[{ flex: 1 }, style]}\n        tabIndex=\"0\"\n        ref={view => {\n          const nextView = getElement(view);\n          if (nextView && nextView.addEventListener) {\n            nextView.addEventListener(\n              'touchstart',\n              this.freezeBodyStart,\n              false,\n            );\n            nextView.addEventListener('touchmove', this.freezeBodyMove, false);\n          }\n          if (this.view && this.view.removeEventListener) {\n            this.view.removeEventListener(\n              'touchstart',\n              this.freezeBodyStart,\n              false,\n            );\n            this.view.removeEventListener(\n              'touchmove',\n              this.freezeBodyMove,\n              false,\n            );\n          }\n          this.view = nextView;\n        }}\n        {...props}\n      />\n    );\n  }\n}\n\nexport default DisableBodyScrollingView;\n"]},"metadata":{},"sourceType":"module"}