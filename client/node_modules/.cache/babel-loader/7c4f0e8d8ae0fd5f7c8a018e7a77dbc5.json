{"ast":null,"code":"var _jsxFileName = \"/home/rk32/Apps/ReactJs/insta_challenge/client/src/post/New.js\";\nimport React, { Component } from \"react\"; //import api from \"../services/api\";\n\nimport { isAuthenticated } from \"../auth\";\nimport { create } from \"../apis/apiPost\";\nimport { Redirect } from \"react-router-dom\";\nimport loadingGif from \"../assets/images/loading.gif\";\nimport hashTagsImg from \"../assets/images/hashtag-solid.svg\";\nimport locationImg from \"../assets/images/search-location-solid.svg\";\nimport \"./New.css\";\n\nclass New extends Component {\n  constructor() {\n    super();\n\n    this.isValid = () => {\n      const {\n        description,\n        hashtags,\n        fileSize\n      } = this.state;\n\n      if (fileSize > 51200) {\n        this.setState({\n          error: \"File should be less than 5120kb or 5mb\"\n        });\n        return false;\n      }\n\n      if (description.length === 0 || hashtags.length === 0) {\n        this.setState({\n          error: \"Description and hashtags are required\",\n          loading: false\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        error: \"\"\n      });\n      const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n      this.postData.set(name, value);\n      const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n      this.setState({\n        [name]: value,\n        fileSize\n      });\n    };\n\n    this.clickSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      if (this.isValid()) {\n        const userId = isAuthenticated().user._id;\n\n        const token = isAuthenticated().token;\n        console.log(this);\n        create(userId, token, this.postData).then(data => {\n          if (data.error) this.setState({\n            error: data.error\n          });else {\n            this.setState({\n              loading: false,\n              photo: \"\",\n              description: \"\",\n              place: \"\",\n              hashtags: \"\",\n              redirectToProfile: true\n            });\n          } //\n        });\n      }\n    };\n\n    this.newPostForm = (description, hashtags, place) => /*#__PURE__*/React.createElement(\"form\", {\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: this.handleChange(\"photo\"),\n      className: \"form-control text-dark bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"far fa-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \" bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control text-dark bold\",\n      type: \"text\",\n      name: \"description\",\n      placeholder: \"Post's Description\",\n      onChange: this.handleChange(\"description\"),\n      value: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: locationImg,\n      alt: \"geo-loc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \" bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"Location\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control text-dark bold\",\n      type: \"text\",\n      name: \"place\",\n      placeholder: \"Post's place\",\n      onChange: this.handleChange(\"place\"),\n      value: place,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: hashTagsImg,\n      alt: \"hashTags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \" bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, \"Hashtags\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control text-dark bold\",\n      type: \"text\",\n      name: \"hashtags\",\n      placeholder: \"Post's Hashtags\",\n      onChange: this.handleChange(\"hashtags\"),\n      value: hashtags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.clickSubmit,\n      className: \"btn btn-raised btn-info btn-lg waves-effect waves-light btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, \"Post\"));\n\n    this.state = {\n      description: \"\",\n      place: \"\",\n      hashtags: \"\",\n      photo: \"\",\n      error: \"\",\n      user: {},\n      fileSize: 0,\n      redirectToProfile: false,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: isAuthenticated().user\n    });\n    this.postData = new FormData();\n  }\n\n  render() {\n    const {\n      description,\n      hashtags,\n      user,\n      redirectToProfile,\n      error,\n      loading,\n      place\n    } = this.state;\n\n    if (redirectToProfile) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: `/user/${user._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, error), loading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \" text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-fluid\",\n      width: \"200\",\n      src: loadingGif,\n      alt: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }))) : \"\", this.newPostForm(description, hashtags, place));\n  }\n\n}\n\nexport default New;","map":{"version":3,"sources":["/home/rk32/Apps/ReactJs/insta_challenge/client/src/post/New.js"],"names":["React","Component","isAuthenticated","create","Redirect","loadingGif","New","constructor","isValid","description","hashtags","fileSize","state","setState","error","length","loading","handleChange","name","event","value","target","files","postData","set","size","clickSubmit","e","preventDefault","userId","user","_id","token","console","log","then","data","photo","place","redirectToProfile","newPostForm","locationImg","hashTagsImg","componentDidMount","FormData","render","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import api from \"../services/api\";\nimport { isAuthenticated } from \"../auth\";\nimport { create } from \"../apis/apiPost\";\nimport { Redirect } from \"react-router-dom\";\nimport loadingGif from \"../assets/images/loading.gif\";\nimport hashTagsImg from \"../assets/images/hashtag-solid.svg\";\nimport locationImg from \"../assets/images/search-location-solid.svg\";\n\nimport \"./New.css\";\n\nclass New extends Component {\n  constructor() {\n    super();\n    this.state = {\n      description: \"\",\n      place: \"\",\n      hashtags: \"\",\n      photo: \"\",\n      error: \"\",\n      user: {},\n      fileSize: 0,\n      redirectToProfile: false,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ user: isAuthenticated().user });\n    this.postData = new FormData();\n    \n  }\n\n  isValid = () => {\n    const { description, hashtags, fileSize } = this.state;\n    if (fileSize > 51200) {\n      this.setState({ error: \"File should be less than 5120kb or 5mb\" });\n      return false;\n    }\n    if (description.length === 0 || hashtags.length === 0) {\n      this.setState({\n        error: \"Description and hashtags are required\",\n        loading: false\n      });\n      return false;\n    }\n    return true;\n  };\n\n  handleChange = name => event => {\n    this.setState({ error: \"\" });\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    this.postData.set(name, value);\n    const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n    this.setState({ [name]: value, fileSize });\n  };\n\n  clickSubmit = async e => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    if (this.isValid()) {\n      const userId = isAuthenticated().user._id;\n      const token = isAuthenticated().token;\nconsole.log(this)\n      create(userId, token, this.postData).then(data => {\n        if (data.error) this.setState({ error: data.error });\n        else {\n          this.setState({\n            loading: false,\n            photo: \"\",\n            description: \"\",\n            place: \"\",\n            hashtags: \"\",\n            redirectToProfile: true\n          });\n        }\n        //\n      });\n    }\n  };\n\n  newPostForm = (description, hashtags, place) => (\n    <form className=\"mt-5\">\n      <div className=\"form-group\">\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={this.handleChange(\"photo\")}\n          className=\"form-control text-dark bold\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <i className=\"far fa-edit\"></i>\n        <label className=\" bold\">Description</label>\n        <input\n          className=\"form-control text-dark bold\"\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Post's Description\"\n          onChange={this.handleChange(\"description\")}\n          value={description}\n        />\n      </div>\n      <div className=\"form-group\">\n        <img src={locationImg} alt=\"geo-loc\" />\n        <label className=\" bold\">Location</label>\n        <input\n          className=\"form-control text-dark bold\"\n          type=\"text\"\n          name=\"place\"\n          placeholder=\"Post's place\"\n          onChange={this.handleChange(\"place\")}\n          value={place}\n        />\n      </div>\n      <div className=\"form-group\">\n        <img src={hashTagsImg} alt=\"hashTags\" />\n        <label className=\" bold\">Hashtags</label>\n        <input\n          className=\"form-control text-dark bold\"\n          type=\"text\"\n          name=\"hashtags\"\n          placeholder=\"Post's Hashtags\"\n          onChange={this.handleChange(\"hashtags\")}\n          value={hashtags}\n        />\n      </div>\n      <button\n        onClick={this.clickSubmit}\n        className=\"btn btn-raised btn-info btn-lg waves-effect waves-light btn-block\"\n      >\n        Post\n      </button>\n    </form>\n  );\n\n  render() {\n    const {\n      description,\n      hashtags,\n      user,\n      redirectToProfile,\n      error,\n      loading,\n      place\n    } = this.state;\n\n    if (redirectToProfile) {\n      return <Redirect to={`/user/${user._id}`} />;\n    }\n    return (\n      <div className=\"container\">\n        <div\n          className=\"alert alert-danger\"\n          style={{ display: error ? \"\" : \"none\" }}\n        >\n          {error}\n        </div>\n\n        {loading ? (\n          <div className=\" text-center\">\n            {\" \"}\n            <h2>\n              <img\n                className=\"img-fluid\"\n                width=\"200\"\n                src={loadingGif}\n                alt=\"loading\"\n              />\n            </h2>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {this.newPostForm(description, hashtags, place)}\n      </div>\n    );\n  }\n}\n\nexport default New;\n"]},"metadata":{},"sourceType":"module"}