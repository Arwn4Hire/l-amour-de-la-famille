{"ast":null,"code":"var _jsxFileName = \"/home/rk32/Apps/ReactJs/insta_challenge/client/src/post/New.js\";\nimport React, { Component } from \"react\"; //import api from \"../services/api\";\n\nimport { isAuthenticated } from \"../auth\";\nimport { create } from \"../apis/apiPost\";\nimport { Redirect } from \"react-router-dom\";\nimport loadingGif from \"../assets/images/loading.gif\";\nimport hashTagsImg from \"../assets/images/hashtag-solid.svg\";\nimport locationImg from \"../assets/images/search-location-solid.svg\";\nimport \"./New.css\";\nexport default class New extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      photo: \"\",\n      error: \"\",\n      user: {},\n      fileSize: 0,\n      redirectToProfile: false,\n      loading: false,\n      place: \"\",\n      description: \"\",\n      hashtags: \"\"\n    };\n\n    this.isValid = () => {\n      const {\n        description,\n        place,\n        hashtags,\n        fileSize\n      } = this.state;\n\n      if (fileSize > 51200) {\n        this.setState({\n          error: \"File should be less than 5120kb or 5mb\"\n        });\n        return false;\n      }\n\n      if (description.length === 0 || hashtags.length === 0) {\n        this.setState({\n          error: \"Description and hashtags are required\",\n          loading: false\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        error: \"\"\n      });\n      const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n      this.postData.set(name, value);\n      const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n      this.setState({\n        [name]: value,\n        fileSize\n      });\n    };\n\n    this.handleImageChange = e => {\n      this.setState({\n        image: e.target.files[0]\n      });\n    };\n\n    this.clickSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      if (this.isValid()) {\n        const userId = isAuthenticated().user._id;\n\n        const token = isAuthenticated().token;\n        create(userId, token, this.postData).then(data => {\n          if (data.error) this.setState({\n            error: data.error\n          });else {\n            this.setState({\n              loading: false,\n              description: \"\",\n              hashtags: \"\",\n              photo: \"\",\n              redirectToProfile: true\n            });\n          } //\n        });\n      }\n    };\n\n    this.newPostForm = (description, hashtags, place) => /*#__PURE__*/React.createElement(\"form\", {\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: this.handleChange(\"photo\"),\n      className: \"form-control text-white bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"far fa-edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \" bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control text-dark bold\",\n      type: \"text\",\n      name: \"description\",\n      placeholder: \"Post's Description\",\n      onChange: this.handleChange(\"description\"),\n      value: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: locationImg,\n      alt: \"geo-loc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \" bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, \"Location\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control text-dark bold\",\n      type: \"text\",\n      name: \"place\",\n      placeholder: \"Post's place\",\n      onChange: this.handleChange(\"place\"),\n      value: place,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: hashTagsImg,\n      alt: \"hashTags\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \" bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, \"Hashtags\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control text-dark bold\",\n      type: \"text\",\n      name: \"hashtags\",\n      placeholder: \"Post's Hashtags\",\n      onChange: this.handleChange(\"hashtags\"),\n      value: hashtags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onSubmit: this.handleSubmit,\n      className: \"btn btn-raised btn-info btn-lg waves-effect waves-light btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, \"Post\"));\n  }\n\n  componentDidMount() {\n    this.setState({\n      user: isAuthenticated().user\n    });\n    this.postData = new FormData();\n  }\n\n  render() {\n    const {\n      description,\n      hashtags,\n      user,\n      redirectToProfile,\n      error,\n      loading,\n      place\n    } = this.state;\n\n    if (redirectToProfile) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: `/user/${user._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, error), loading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \" text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"img-fluid\",\n      width: \"200\",\n      src: loadingGif,\n      alt: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }))) : \"\", this.newPostForm(description, hashtags, place));\n  }\n\n}","map":{"version":3,"sources":["/home/rk32/Apps/ReactJs/insta_challenge/client/src/post/New.js"],"names":["React","Component","isAuthenticated","create","Redirect","loadingGif","New","state","photo","error","user","fileSize","redirectToProfile","loading","place","description","hashtags","isValid","setState","length","handleChange","name","event","value","target","files","postData","set","size","handleImageChange","e","image","clickSubmit","preventDefault","userId","_id","token","then","data","newPostForm","locationImg","hashTagsImg","handleSubmit","componentDidMount","FormData","render","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import api from \"../services/api\";\nimport { isAuthenticated } from \"../auth\";\nimport { create } from \"../apis/apiPost\";\nimport { Redirect } from \"react-router-dom\";\nimport loadingGif from \"../assets/images/loading.gif\";\nimport hashTagsImg from \"../assets/images/hashtag-solid.svg\";\nimport locationImg from \"../assets/images/search-location-solid.svg\";\n\nimport \"./New.css\";\n\nexport default class New extends Component {\n  state = {\n    photo: \"\",\n    error: \"\",\n    user: {},\n    fileSize: 0,\n    redirectToProfile: false,\n    loading: false,\n    place: \"\",\n    description: \"\",\n    hashtags: \"\"\n  };\n\n  componentDidMount() {\n    this.setState({ user: isAuthenticated().user });\n    this.postData = new FormData();\n  }\n\n  isValid = () => {\n    const { description, place, hashtags, fileSize } = this.state;\n    if (fileSize > 51200) {\n      this.setState({ error: \"File should be less than 5120kb or 5mb\" });\n      return false;\n    }\n    if (description.length === 0 || hashtags.length === 0) {\n      this.setState({ error: \"Description and hashtags are required\", loading: false });\n      return false;\n    }\n    return true;\n  };\n\n  handleChange = name => event => {\n    this.setState({ error: \"\" });\n    const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n    this.postData.set(name, value);\n    const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n    this.setState({ [name]: value, fileSize });\n  };\n\n  handleImageChange = e => {\n    this.setState({ image: e.target.files[0] });\n  };\n\n  clickSubmit = e => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    if (this.isValid()) {\n      const userId = isAuthenticated().user._id;\n      const token = isAuthenticated().token;\n\n      create(userId, token, this.postData).then(data => {\n        if (data.error) this.setState({ error: data.error });\n        else {\n          this.setState({\n            loading: false,\n            description: \"\",\n            hashtags: \"\",\n            photo: \"\",\n            redirectToProfile: true\n          });\n        }\n        //\n      });\n    }\n  };\n\n  // handleSubmit = async e => {\n  //   e.preventDefault();\n  //   const data = new FormData();\n\n  //   data.append(\"image\", this.state.image);\n  //   data.append(\"author\", this.state.author);\n  //   data.append(\"place\", this.state.place);\n  //   data.append(\"description\", this.state.description);\n  //   data.append(\"hashtags\", this.state.hashtags);\n\n  //  // await api.post(\"posts\", data);\n\n  //   this.props.history.push(\"/\");\n  // };\n\n  newPostForm = (description, hashtags, place) => (\n    <form className='mt-5'>\n    <div className=\"form-group\">\n        \n    <input\n      type=\"file\"\n      accept=\"image/*\"\n      onChange={this.handleChange(\"photo\")}\n      className=\"form-control text-white bold\"\n    />\n  </div>\n      <div className=\"form-group\">\n      <i className=\"far fa-edit\"></i>\n        <label className=\" bold\">Description</label>\n        <input\n          className=\"form-control text-dark bold\"\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Post's Description\"\n          onChange={this.handleChange(\"description\")}\n          value={description}\n        />\n      </div>\n      <div className=\"form-group\">\n      <img src={locationImg} alt='geo-loc'/>\n        <label className=\" bold\">Location</label>\n        <input\n          className=\"form-control text-dark bold\"\n          type=\"text\"\n          name=\"place\"\n          placeholder=\"Post's place\"\n          onChange={this.handleChange(\"place\")}\n          value={place}\n        />\n      </div>\n      <div className=\"form-group\">\n      <img src={hashTagsImg} alt='hashTags'/>\n        <label className=\" bold\">Hashtags</label>\n        <input\n          className=\"form-control text-dark bold\"\n          type=\"text\"\n          name=\"hashtags\"\n          placeholder=\"Post's Hashtags\"\n          onChange={this.handleChange(\"hashtags\")}\n          value={hashtags}\n        />\n      </div>\n      <button onSubmit={this.handleSubmit} className=\"btn btn-raised btn-info btn-lg waves-effect waves-light btn-block\">\n        Post\n      </button>\n    </form>\n  )\n\n  render() {\n    const { description, hashtags, user, redirectToProfile, error, loading, place } = this.state;\n\n    if (redirectToProfile) {\n      return <Redirect to={`/user/${user._id}`} />;\n    }\n    return (\n      <div className='container'>\n      <div\n      className=\"alert alert-danger\"\n      style={{ display: error ? \"\" : \"none\" }}\n    >\n      {error}\n    </div>\n    \n    {loading ? (\n      <div className=\" text-center\">\n        {\" \"}\n        <h2>\n          <img className='img-fluid' width=\"200\" src={loadingGif} alt=\"loading\" />\n        </h2>\n      </div>\n    ) : (\n      \"\"\n    )}\n    {this.newPostForm(description, hashtags, place)}\n    </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}