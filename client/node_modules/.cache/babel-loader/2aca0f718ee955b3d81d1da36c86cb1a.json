{"ast":null,"code":"export const signup = async user => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/signup`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const signin = async user => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/signin`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const authenticate = (jwt, next) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"jwt\", JSON.stringify(jwt));\n    next();\n  }\n};\nexport const signout = async next => {\n  if (typeof window !== \"undefined\") localStorage.removeItem('jwt');\n  next();\n\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/signout`, {\n      method: \"GET\"\n    });\n    console.log('singout', response);\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const isAuthenticated = () => {\n  if (typeof window == \"undefined\") {\n    return false;\n  }\n\n  if (localStorage.getItem('jwt')) {\n    return JSON.parse(localStorage.getItem('jwt'));\n  } else {\n    return false;\n  }\n};\nexport const forgotPassword = async email => {\n  console.log('email: ', email);\n\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/forgot-password/`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    console.log('forgot password response: ', response);\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};\nexport const resetPassword = async resetInfo => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/reset-password/`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(resetInfo)\n    });\n    console.log('forgot password response: ', response);\n    return response.json();\n  } catch (err) {\n    return console.log(err);\n  }\n};","map":{"version":3,"sources":["/home/rk32/Apps/ReactJs/insta_challenge/client/src/auth/index.js"],"names":["signup","user","response","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","body","JSON","stringify","json","err","console","log","signin","authenticate","jwt","next","window","localStorage","setItem","signout","removeItem","isAuthenticated","getItem","parse","forgotPassword","email","resetPassword","resetInfo"],"mappings":"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","sourcesContent":["export const signup = async user => {\n    try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/signup`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    return response.json();\n  }\n  catch (err) {\n    return console.log(err);\n  }\n  };\n\nexport const signin = async user => {\n    try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/signin`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    return response.json();\n  }\n  catch (err) {\n    return console.log(err);\n  }\n  };\n\n  export const authenticate = (jwt, next) => {\n    if(typeof window !== \"undefined\") {\n        localStorage.setItem(\"jwt\" , JSON.stringify(jwt))\n        next()\n    }\n  }\n\nexport const signout = async (next) => {\n    if(typeof window !== \"undefined\") localStorage.removeItem('jwt')\n    next()\n    try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/signout`, {\n      method: \"GET\"\n    });\n    console.log('singout', response);\n    return response.json();\n  }\n  catch (err) {\n    return console.log(err);\n  }\n}\n\nexport const isAuthenticated = () => {\n    if(typeof window == \"undefined\") {\n        return false\n    }\n\n    if(localStorage.getItem('jwt')) {\n        return JSON.parse(localStorage.getItem('jwt'))\n    } else {\n        return false\n    } \n}\n\nexport const forgotPassword = async email => {\n  console.log('email: ', email);\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/forgot-password/`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ email })\n    });\n    console.log('forgot password response: ', response);\n    return response.json();\n  }\n  catch (err) {\n    return console.log(err);\n  }\n};\n\nexport const resetPassword = async resetInfo => {\n  try {\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/reset-password/`, {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(resetInfo)\n    });\n    console.log('forgot password response: ', response);\n    return response.json();\n  }\n  catch (err) {\n    return console.log(err);\n  }\n};"]},"metadata":{},"sourceType":"module"}