{"ast":null,"code":"var _jsxFileName = \"/home/rk32/Apps/ReactJs/insta_challenge/client/src/templates/FeedList.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Animated, FlatList, StyleSheet, View } from 'react-native';\nimport { Stories } from '../constants/Posts';\nimport FeedListFooter from './FeedListFooter';\nimport Item from './Item';\nimport StorySlider from './StorySlider';\nexport const profileImageSize = 32;\nexport default class FeedList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this._scrollValue = new Animated.Value(0);\n    this._scaleValue = new Animated.Value(1);\n    this._gesturePosition = new Animated.ValueXY();\n    this.state = {\n      isDragging: false\n    };\n    this.state = {\n      isDragging: false\n    };\n  }\n\n  getChildContext() {\n    return {\n      gesturePosition: this._gesturePosition,\n      scaleValue: this._scaleValue,\n      getScrollPosition: () => {\n        return this._scrollValue.__getValue();\n      }\n    };\n  }\n\n  render() {\n    const {\n      onPressFooter,\n      ...props\n    } = this.props;\n    let {\n      isDragging,\n      selectedPhoto\n    } = this.state;\n    let onScroll = Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          y: this._scrollValue\n        }\n      }\n    }]);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FlatList, Object.assign({\n      showsVerticalScrollIndicator: false,\n      style: {\n        backgroundColor: 'transparent'\n      },\n      ref: ref => this.list = ref,\n      scrollEventThrottle: 16,\n      onScroll: onScroll,\n      scrollEnabled: !isDragging,\n      zoomScale: 1,\n      bouncesZoom: false,\n      maximumZoomScale: 1,\n      minimumZoomScale: 1,\n      renderItem: ({\n        item\n      }) => /*#__PURE__*/React.createElement(Item, {\n        isLarge: props.isLarge,\n        getParent: () => this.list,\n        isDragging: isDragging,\n        onGestureStart: selectedPhoto => {\n          this.setState({\n            selectedPhoto,\n            isDragging: true\n          });\n        },\n        onGestureRelease: () => this.setState({\n          isDragging: false\n        }),\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }),\n      ListFooterComponent: props => /*#__PURE__*/React.createElement(FeedListFooter, Object.assign({}, props, {\n        onPress: onPressFooter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      })),\n      keyExtractor: (item, index) => item.key + ' ' + index\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    })), isDragging ? /*#__PURE__*/React.createElement(SelectedPhoto, {\n      key: selectedPhoto ? selectedPhoto.photoURI : '',\n      selectedPhoto: selectedPhoto,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }) : null);\n  }\n\n}\nFeedList.defaultProps = {\n  ListHeaderComponent: props => /*#__PURE__*/React.createElement(StorySlider, {\n    stories: Stories,\n    __self: FeedList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 35\n    }\n  })\n};\nFeedList.childContextTypes = {\n  gesturePosition: PropTypes.object,\n  getScrollPosition: PropTypes.func,\n  scaleValue: PropTypes.object\n};\n\nclass SelectedPhoto extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoaded: false\n    };\n  }\n\n  render() {\n    let {\n      selectedPhoto\n    } = this.props;\n    let {\n      isLoaded\n    } = this.state;\n    let {\n      gesturePosition,\n      scaleValue\n    } = this.context;\n    let animatedStyle = {\n      transform: gesturePosition.getTranslateTransform()\n    };\n    animatedStyle.transform.push({\n      scale: scaleValue\n    });\n    let imageStyle = [{\n      position: 'absolute',\n      zIndex: 10,\n      width: selectedPhoto.measurement.w,\n      height: selectedPhoto.measurement.h,\n      opacity: isLoaded ? 1 : 0\n    }, animatedStyle];\n    let backgroundOpacityValue = scaleValue.interpolate({\n      inputRange: [1.0, 1.1, 2.0],\n      outputRange: [0.0, 0.15, 0.75],\n      extrapolate: 'clamp'\n    });\n    return /*#__PURE__*/React.createElement(BodyPortal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      style: styles.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Animated.View, {\n      style: [styles.background, {\n        opacity: backgroundOpacityValue\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Animated.Image, {\n      style: imageStyle,\n      onLoad: () => {\n        setTimeout(() => {\n          this.setState({\n            isLoaded: true\n          });\n        });\n      },\n      source: selectedPhoto.source,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nSelectedPhoto.contextTypes = {\n  gesturePosition: PropTypes.object,\n  scrollValue: PropTypes.object,\n  scaleValue: PropTypes.object\n};\nimport ReactDOM from 'react-dom';\nexport class BodyPortal extends React.PureComponent {\n  render() {\n    return ReactDOM.createPortal(this.props.children, global.document.body);\n  }\n\n}\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n  },\n  background: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    backgroundColor: 'black'\n  }\n});","map":{"version":3,"sources":["/home/rk32/Apps/ReactJs/insta_challenge/client/src/templates/FeedList.js"],"names":["PropTypes","React","Animated","FlatList","StyleSheet","View","Stories","FeedListFooter","Item","StorySlider","profileImageSize","FeedList","Component","_scrollValue","Value","_scaleValue","_gesturePosition","ValueXY","state","isDragging","getChildContext","gesturePosition","scaleValue","getScrollPosition","__getValue","render","onPressFooter","props","selectedPhoto","onScroll","event","nativeEvent","contentOffset","y","backgroundColor","ref","list","item","isLarge","setState","index","key","photoURI","defaultProps","ListHeaderComponent","childContextTypes","object","func","SelectedPhoto","isLoaded","context","animatedStyle","transform","getTranslateTransform","push","scale","imageStyle","position","zIndex","width","measurement","w","height","h","opacity","backgroundOpacityValue","interpolate","inputRange","outputRange","extrapolate","styles","root","background","setTimeout","source","contextTypes","scrollValue","ReactDOM","BodyPortal","PureComponent","createPortal","children","global","document","body","create","flex","top","left","bottom","right"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Animated, FlatList, StyleSheet, View } from 'react-native';\n\nimport { Stories } from '../constants/Posts';\nimport FeedListFooter from './FeedListFooter';\nimport Item from './Item';\nimport StorySlider from './StorySlider';\n\nexport const profileImageSize = 32;\n\nexport default class FeedList extends React.Component {\n  static defaultProps = {\n    ListHeaderComponent: props => <StorySlider stories={Stories} />,\n  };\n\n  _scrollValue = new Animated.Value(0);\n  _scaleValue = new Animated.Value(1);\n  _gesturePosition = new Animated.ValueXY();\n  state = {\n    isDragging: false,\n  };\n\n  static childContextTypes = {\n    gesturePosition: PropTypes.object,\n    getScrollPosition: PropTypes.func,\n    scaleValue: PropTypes.object,\n  };\n\n  state = {\n    isDragging: false,\n  };\n\n  getChildContext() {\n    return {\n      gesturePosition: this._gesturePosition,\n      scaleValue: this._scaleValue,\n      getScrollPosition: () => {\n        return this._scrollValue.__getValue();\n      },\n    };\n  }\n\n  render() {\n    const { onPressFooter, ...props } = this.props;\n\n    let { isDragging, selectedPhoto } = this.state;\n    let onScroll = Animated.event([\n      { nativeEvent: { contentOffset: { y: this._scrollValue } } },\n    ]);\n\n    return (\n      <React.Fragment>\n        <FlatList\n          showsVerticalScrollIndicator={false}\n          style={{ backgroundColor: 'transparent' }}\n          ref={ref => (this.list = ref)}\n          scrollEventThrottle={16}\n          onScroll={onScroll}\n          scrollEnabled={!isDragging}\n          zoomScale={1}\n          bouncesZoom={false}\n          maximumZoomScale={1}\n          minimumZoomScale={1}\n          renderItem={({ item }) => (\n            <Item\n              isLarge={props.isLarge}\n              getParent={() => this.list}\n              isDragging={isDragging}\n              onGestureStart={selectedPhoto => {\n                this.setState({\n                  selectedPhoto,\n                  isDragging: true,\n                });\n              }}\n              onGestureRelease={() => this.setState({ isDragging: false })}\n              item={item}\n            />\n          )}\n          ListFooterComponent={props => (\n            <FeedListFooter {...props} onPress={onPressFooter} />\n          )}\n          keyExtractor={(item, index) => item.key + ' ' + index}\n          {...props}\n        />\n        {isDragging ? (\n          <SelectedPhoto\n            key={selectedPhoto ? selectedPhoto.photoURI : ''}\n            selectedPhoto={selectedPhoto}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nclass SelectedPhoto extends React.Component {\n  state = { isLoaded: false };\n\n  static contextTypes = {\n    gesturePosition: PropTypes.object,\n    scrollValue: PropTypes.object,\n    scaleValue: PropTypes.object,\n  };\n\n  render() {\n    let { selectedPhoto } = this.props;\n    let { isLoaded } = this.state;\n\n    let { gesturePosition, scaleValue } = this.context;\n\n    let animatedStyle = {\n      transform: gesturePosition.getTranslateTransform(),\n    };\n    animatedStyle.transform.push({\n      scale: scaleValue,\n    });\n\n    let imageStyle = [\n      {\n        position: 'absolute',\n        zIndex: 10,\n        width: selectedPhoto.measurement.w,\n        height: selectedPhoto.measurement.h,\n        opacity: isLoaded ? 1 : 0,\n      },\n      animatedStyle,\n    ];\n\n    let backgroundOpacityValue = scaleValue.interpolate({\n      inputRange: [1.0, 1.1, 2.0],\n      outputRange: [0.0, 0.15, 0.75],\n      extrapolate: 'clamp',\n    });\n\n    return (\n      <BodyPortal>\n        <View style={styles.root}>\n          <Animated.View\n            style={[\n              styles.background,\n              {\n                opacity: backgroundOpacityValue,\n              },\n            ]}\n          />\n          <Animated.Image\n            style={imageStyle}\n            onLoad={() => {\n              setTimeout(() => {\n                this.setState({ isLoaded: true });\n              });\n            }}\n            source={selectedPhoto.source}\n          />\n        </View>\n      </BodyPortal>\n    );\n  }\n}\n\nimport ReactDOM from 'react-dom';\n\nexport class BodyPortal extends React.PureComponent {\n  render() {\n    return ReactDOM.createPortal(this.props.children, global.document.body);\n  }\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n  },\n  background: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    backgroundColor: 'black',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}