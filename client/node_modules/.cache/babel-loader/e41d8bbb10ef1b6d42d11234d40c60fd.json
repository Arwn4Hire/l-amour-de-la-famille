{"ast":null,"code":"var _jsxFileName = \"/home/rk32/Apps/ReactJs/insta_challenge/client/src/post/New.js\";\nimport React, { Component } from \"react\"; //import api from \"../services/api\";\n\nimport \"./New.css\";\nexport default class New extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      image: null,\n      author: \"\",\n      place: \"\",\n      description: \"\",\n      hashtags: \"\"\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleImageChange = e => {\n      this.setState({\n        image: e.target.files[0]\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const data = new FormData();\n      data.append(\"image\", this.state.image);\n      data.append(\"author\", this.state.author);\n      data.append(\"place\", this.state.place);\n      data.append(\"description\", this.state.description);\n      data.append(\"hashtags\", this.state.hashtags);\n      await api.post(\"posts\", data);\n      this.props.history.push(\"/\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      id: \"new-post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      onChange: this.handleImageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"author\",\n      placeholder: \"Post's author\",\n      onChange: this.handleChange,\n      value: this.state.author,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"place\",\n      placeholder: \"Post's place\",\n      onChange: this.handleChange,\n      value: this.state.place,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      placeholder: \"Post's Description\",\n      onChange: this.handleChange,\n      value: this.state.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"hashtags\",\n      placeholder: \"Post's Hashtags\",\n      onChange: this.handleChange,\n      value: this.state.hashtags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Post\"));\n  }\n\n}","map":{"version":3,"sources":["/home/rk32/Apps/ReactJs/insta_challenge/client/src/post/New.js"],"names":["React","Component","New","state","image","author","place","description","hashtags","handleChange","e","setState","target","name","value","handleImageChange","files","handleSubmit","preventDefault","data","FormData","append","api","post","props","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import api from \"../services/api\";\n\nimport \"./New.css\";\n\nexport default class New extends Component {\n  state = {\n    image: null,\n    author: \"\",\n    place: \"\",\n    description: \"\",\n    hashtags: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleImageChange = e => {\n    this.setState({ image: e.target.files[0] });\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData();\n\n    data.append(\"image\", this.state.image);\n    data.append(\"author\", this.state.author);\n    data.append(\"place\", this.state.place);\n    data.append(\"description\", this.state.description);\n    data.append(\"hashtags\", this.state.hashtags);\n\n    await api.post(\"posts\", data);\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} id=\"new-post\">\n        <input type=\"file\" name=\"image\" onChange={this.handleImageChange} />\n        <input\n          type=\"text\"\n          name=\"author\"\n          placeholder=\"Post's author\"\n          onChange={this.handleChange}\n          value={this.state.author}\n        />\n        <input\n          type=\"text\"\n          name=\"place\"\n          placeholder=\"Post's place\"\n          onChange={this.handleChange}\n          value={this.state.place}\n        />\n        <input\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"Post's Description\"\n          onChange={this.handleChange}\n          value={this.state.description}\n        />\n        <input\n          type=\"text\"\n          name=\"hashtags\"\n          placeholder=\"Post's Hashtags\"\n          onChange={this.handleChange}\n          value={this.state.hashtags}\n        />\n        <button type=\"submit\">Post</button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}